// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// find_candidates
std::vector< std::vector<int> > find_candidates(const IntegerMatrix& features, const IntegerVector& window);
RcppExport SEXP _njforce_find_candidates(SEXP featuresSEXP, SEXP windowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type features(featuresSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type window(windowSEXP);
    rcpp_result_gen = Rcpp::wrap(find_candidates(features, window));
    return rcpp_result_gen;
END_RCPP
}
// permute
std::vector< unsigned int > permute(const std::vector< std::vector< unsigned int > >& candidates);
RcppExport SEXP _njforce_permute(SEXP candidatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector< std::vector< unsigned int > >& >::type candidates(candidatesSEXP);
    rcpp_result_gen = Rcpp::wrap(permute(candidates));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_njforce_find_candidates", (DL_FUNC) &_njforce_find_candidates, 2},
    {"_njforce_permute", (DL_FUNC) &_njforce_permute, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_njforce(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
